name: .NET CI/CD

on:
  push:
    branches: [ develop ]

jobs:
  build_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        ref: develop

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build -c Release --no-restore

    - name: Test
      run: dotnet test ./APITests/APITests.csproj -c Release --verbosity normal

  publish:
    needs: build_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: develop
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: stagecodes
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push Docker Image
        run: |
          docker build -t stagecodes/otr-api-dev .
          docker push stagecodes/otr-api-dev

  deploy:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: develop
      - name: Create .env files
        run: |
          echo "${{ secrets.DEV_APP_ENV }}" > app.env
          echo "${{ secrets.DEV_DB_ENV }}" > db.env
          echo "${{ secrets.DEV_POSTGRES_EXPORTER }}" > postgres_exporter.env
      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEV_SSH_HOST }}
          username: ${{ secrets.DEV_SSH_USER }}
          key: ${{ secrets.DEV_SSH_KEY }}
          source: "app.env,db.env,postgres_exporter.env,docker-compose-prod.yml,otel-collector-config.yml,prometheus.yml"
          target: "~/otr-api/"
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SSH_HOST }}
          username: ${{ secrets.DEV_SSH_USER }}
          key: ${{ secrets.DEV_SSH_KEY }}
          script: |
            cd ~/otr-api
            docker compose -f docker-compose-dev.yml pull
            docker compose -f docker-compose-dev.yml up -d --build